{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;;AAEA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;;;;;UC5EA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNmE;;AAEnE;AACA;AACA;AACA;AACA,IAAI,sDAAe;AACnB;AACA,IAAI,yDAAkB;AACtB,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,uCAAI;AACR,IAAI,yDAAkB;AACtB,GAAG;AACH,CAAC","sources":["webpack://todo/./src/js/todo.js","webpack://todo/webpack/bootstrap","webpack://todo/webpack/runtime/define property getters","webpack://todo/webpack/runtime/hasOwnProperty shorthand","webpack://todo/webpack/runtime/make namespace object","webpack://todo/./src/js/index.js"],"sourcesContent":["export const data = {\n  todoList: [],\n  filterWord: \"\",\n};\n\n// 入力された新しいTODOの値を取得し、todoList変数に代入する関数\nexport const registerNewTodo = () => {\n  const newTodoName = document.getElementById(\"new-todo-name\");\n  const newPerson = document.getElementById(\"new-person\");\n  const newDeadline = document.getElementById(\"new-deadline\");\n  data.todoList.push({\n    id: Date.now(),\n    todoName: newTodoName.value,\n    person: newPerson.value,\n    deadline: newDeadline.value,\n  });\n};\n\n// TODO一覧を全て削除する関数\nconst removeTodoListElem = () => {\n  const tbodyElem = document.getElementById(\"todo-list\");\n  while (tbodyElem.firstChild) {\n    tbodyElem.firstChild.remove();\n  }\n};\n\n// 引数にidを受け取り、todoListの中から該当するtodoを削除する関数\nconst removeTodoById = (id) =>\n  (data.todoList = data.todoList.filter((todo) => todo.id !== id));\n\n// TODO一覧を表示する関数\nexport const appendTodoListElem = () => {\n  // TODO一覧を全て削除\n  removeTodoListElem();\n\n  data.todoList\n    .filter(\n      (todo) =>\n        todo.todoName.includes(data.filterWord) ||\n        todo.person.includes(data.filterWord),\n    )\n    .forEach((todo) => {\n      // todoNameのtd要素を生成\n      const todoNameTdElem = document.createElement(\"td\");\n      todoNameTdElem.textContent = todo.todoName;\n      // personのtd要素を生成\n      const personTdElem = document.createElement(\"td\");\n      personTdElem.textContent = todo.person;\n      // deadlineのtd要素を生成\n      const deadlineTdElem = document.createElement(\"td\");\n      deadlineTdElem.textContent = todo.deadline;\n\n      // 削除のbutton要素を生成\n      const removeButtonElem = document.createElement(\"button\");\n      removeButtonElem.textContent = \"削除\";\n      removeButtonElem.addEventListener(\"click\", () => {\n        // 削除ボタンがクリックされたときに該当のtodoを削除する\n        removeTodoById(todo.id);\n        appendTodoListElem();\n      });\n\n      // 削除ボタンのtd要素を生成\n      const buttonTdElem = document.createElement(\"td\");\n      buttonTdElem.appendChild(removeButtonElem);\n\n      // tr要素を生成し、td要素を挿入する\n      const trElem = document.createElement(\"tr\");\n      trElem.appendChild(todoNameTdElem);\n      trElem.appendChild(personTdElem);\n      trElem.appendChild(deadlineTdElem);\n      trElem.appendChild(buttonTdElem);\n\n      // tdody要素の中に、tr要素を挿入する\n      const tbodyElem = document.getElementById(\"todo-list\");\n      tbodyElem.appendChild(trElem);\n    });\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { data, registerNewTodo, appendTodoListElem } from \"./todo\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const registerButtonElem = document.getElementById(\"register\");\n  registerButtonElem.addEventListener(\"click\", () => {\n    // 入力されたTODOの値を取得しtodoList変数に代入\n    registerNewTodo();\n    // TODO一覧を表示\n    appendTodoListElem();\n  });\n\n  console.log(\"Hello World!\");\n  console.log(\"Hello World!2\");\n  console.log(\"Hello World!3\");\n\n  // 絞り込みに入力された場合のイベント定義\n  const filterInputElem = document.getElementById(\"filter\");\n  filterInputElem.addEventListener(\"input\", () => {\n    data.filterWord = filterInputElem.value;\n    appendTodoListElem();\n  });\n});\n"],"names":[],"sourceRoot":""}